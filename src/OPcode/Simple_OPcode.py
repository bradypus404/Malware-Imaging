from capstone import *

test2 = b"\x4D\x5A\x90\x03\x00\x04\x00\x00\x0F\x80\x00\xE1\xFB\xAE\x0B\x49\xCD\x21\xB8\x14\xCC\xD2\x15\x46\x86\x97\x32\x07\x07\x26\xF6\x77\x26\x16\xD2\x06\x36\x16\xE6\xE6\xF7\x42\x06\x26\x52\x07\x27\x56\xE2\x06\x96\xE2\x04\x44\xF5\x32\x06\xD6\xF6\x46\x52\xED\xDA\x24\x00\x00\x00\x01\x4D\x95\x49\x85\x0B\x83\xAC\xB5\x0B\x83\xAC\xB5\x0B\x83\xAC\xB5\x9C\x0A\x9C\xB7\xEB\x83\xAC\xB4\x4D\x33\xEC\xA5\xAB\x83\xAC\xB4\x4D\x33\x9C\xA5\x3B\x83\xAC\xB4\x4D\x33\xBC\xA5\x9B\x83\xAC\xB5\x0B\x83\xBC\xB7\xEB\xD3\xAC\xB4\x4D\x33\x2C\xA4\xEB\x83\xAC\xB4\x4D\x33\xFC\xA7\x1B\x83\xAC\xB4\x4D\x3C\x7C\xB5\x1B\x83\xAC\xB4\x4D\x3C\x5C\xB5\x1B\x83\xAC\xB4\x4D\x33\x8C\xA5\x1B\x83\xAC\xB5\x26\x96\x36\x85\x0B\x83\xAC\xB0\x00\x00\x00\x00\x00\x00\x00\x05\x04\x50\x06\x48\x67\x0D\x48\x07\xEF\x50\x00\x00\x00\x0F\x00\x22\x0B\x2E\x14\x06\x82\x00\xEC\x00\x00\x00\x30\x5A\x20\x01\x00\x00\x00\x40\x10\x00\x01\x00\x00\x20\x0A\x00\x0A\x00\x0A\x00\x00\x00\x00\xA0\x30\x04\x00\xD9\xCC\x30\x20\x60\xC1\x00\x80"
test = b"\x4D\x5A\x90\x03\x00\x04\x00\x00\x0F\x80\x00\xE1\xFB\xAE\x0B\x49\xCD\x21\xB8\x14\xCC\xD2\x15\x46\x86\x97\x32\x07\x07\x26\xF6\x77\x26\x16\xD2\x06\x36\x16\xE6\xE6\xF7\x42\x06\x26\x52\x07\x27\x56\xE2\x06\x96\xE2\x04\x44\xF5\x32\x06\xD6\xF6\x46\x52\xED\xDA\x24\x00\x00\x00\x01\x4D\x95\x49\x85\x0B\x83\xAC\xB5\x0B\x83\xAC\xB5\x0B\x83\xAC\xB5\x9C\x0A\x9C\xB7\xEB\x83\xAC\xB4\x4D\x33\xEC\xA5\xAB\x83\xAC\xB4\x4D\x33\x9C\xA5\x3B\x83\xAC\xB4\x4D\x33\xBC\xA5\x9B\x83\xAC\xB5\x0B\x83\xBC\xB7\xEB\xD3\xAC\xB4\x4D\x33\x2C\xA4\xEB\x83\xAC\xB4\x4D\x33\xFC\xA7\x1B\x83\xAC\xB4\x4D\x3C\x7C\xB5\x1B\x83\xAC\xB4\x4D\x3C\x5C\xB5\x1B\x83\xAC\xB4\x4D\x33\x8C\xA5\x1B\x83\xAC\xB5\x26\x96\x36\x85\x0B\x83\xAC\xB0\x00\x00\x00\x00\x00\x00\x00\x05\x04\x50\x06\x48\x67\x0D\x48\x07\xEF\x50\x00\x00\x00\x0F\x00\x22\x0B\x2E\x14\x06\x82\x00\xEC\x00\x00\x00\x30\x5A\x20\x01\x00\x00\x00\x40\x10\x00\x01\x00\x00\x20\x0A\x00\x0A\x00\x0A\x00\x00\x00\x00\xA0\x30\x04\x00\xD9\xCC\x30\x20\x60\xC1\x00\x80"
test1 = b"\xFF"
str_test = r"\x4D\x5A\x90\x03\x00\x04\x00\x00\x0F\x80\x00\xE1\xFB\xAE\x0B\x49\xCD\x21\xB8\x14\xCC\xD2\x15\x46\x86\x97\x32\x07\x07\x26\xF6\x77\x26\x16\xD2\x06\x36\x16\xE6\xE6\xF7\x42\x06\x26\x52\x07\x27\x56\xE2\x06\x96\xE2\x04\x44\xF5\x32\x06\xD6\xF6\x46\x52\xED\xDA\x24\x00\x00\x00\x01\x4D\x95\x49\x85\x0B\x83\xAC\xB5\x0B\x83\xAC\xB5\x0B\x83\xAC\xB5\x9C\x0A\x9C\xB7\xEB\x83\xAC\xB4\x4D\x33\xEC\xA5\xAB\x83\xAC\xB4\x4D\x33\x9C\xA5\x3B\x83\xAC\xB4\x4D\x33\xBC\xA5\x9B\x83\xAC\xB5\x0B\x83\xBC\xB7\xEB\xD3\xAC\xB4\x4D\x33\x2C\xA4\xEB\x83\xAC\xB4\x4D\x33\xFC\xA7\x1B\x83\xAC\xB4\x4D\x3C\x7C\xB5\x1B\x83\xAC\xB4\x4D\x3C\x5C\xB5\x1B\x83\xAC\xB4\x4D\x33\x8C\xA5\x1B\x83\xAC\xB5\x26\x96\x36\x85\x0B\x83\xAC\xB0\x00\x00\x00\x00\x00\x00\x00\x05\x04\x50\x06\x48\x67\x0D\x48\x07\xEF\x50\x00\x00\x00\x0F\x00\x22\x0B\x2E\x14\x06\x82\x00\xEC\x00\x00\x00\x30\x5A\x20\x01\x00\x00\x00\x40\x10\x00\x01\x00\x00\x20\x0A\x00\x0A\x00\x0A\x00\x00\x00\x00\xA0\x30\x04\x00\xD9\xCC\x30\x20\x60\xC1\x00\x80"

print(str_test.replace('\\x', ' '))
#for i in test:
    #print(hex(i).replace('\\x', ' '), end=' ')
md = Cs(CS_ARCH_X86, CS_MODE_64)
temp = 0
fop = open("C:/Users/brady/VScode/malware/opcode/opcode.txt", 'w')
opcode_list = []
write_hex = ''

for (address, size, mnemonic, op_str) in md.disasm_lite(test, 0x00):
    write_hex = ''
    for i in range(temp, temp+size):
        if (i == len(test)):
            print('??')
            break

        hex_CODE = hex(test[i])
        opcode_list.append(int(hex_CODE, 16))

        write_hex += hex_CODE + ' '

    write_op = write_hex + '\t' + mnemonic + '\t' + op_str + '\n'
    fop.write(write_op)
    #opcode_list.append(0)
    temp += size

fop.close()